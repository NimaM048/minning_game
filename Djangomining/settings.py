"""
Django settings for Djangomining project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import sys
sys.stdout.reconfigure(encoding='utf-8')

from corsheaders.defaults import default_headers
from corsheaders.defaults import default_headers, default_methods

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
from dotenv import load_dotenv
load_dotenv()
SECRET_KEY = os.getenv("SECRET_KEY")



# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CSRF_TRUSTED_ORIGINS = [
    "https://mining-drf.chbk.app",
]




# Application definition

INSTALLED_APPS = [
    # اپ‌های پیش‌فرض جنگو
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # اپ‌های ثالث
    'rest_framework',          # DRF
    'corsheaders',             # اگر نیاز به CORS داری
    'drf_yasg',                # برای مستندات Swagger
    # 'django_filters',        # اگر می‌خوای فیلتر پیشرفته استفاده کنی

    # اپ‌های خودت
    'apps.api',
    'apps.core',
    'apps.users',
    'apps.miners',
    'apps.plans',
    'apps.stakes',
    'apps.wallets',
    "apps.token_app",
    'apps.config',
    "apps.reward",
    'apps.about_us',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # باید بالای CommonMiddleware باشد
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Djangomining.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Djangomining.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False
SECURE_SSL_REDIRECT = False




CORS_ALLOW_ALL_ORIGINS = True # در production غیرفعال کنید
CORS_ALLOW_CREDENTIALS = True


CORS_ALLOW_HEADERS = list(default_headers) + [
    'Authorization',
    'Content-Type',
    'X-CSRFToken',
]

CORS_ALLOW_METHODS = list(default_methods)


CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CSRF_TRUSTED_ORIGINS = [
    "https://coinmaining.game",  # اضافه کردن دامنه جدید
    "http://coinmaining.game",  # اضافه کردن دامنه جدید
    "https://coinmaining.game/backend/",  # اگر لازم است دقیق‌تر URL را اضافه کنید
]

  



JAZZMIN_SETTINGS = {
    "site_title": "Admin Dashboard",
    "site_header": "Mining Admin Panel",
    "site_brand": "Mining Platform",
    "site_logo": None,
    "welcome_sign": "Welcome to the Mining Platform Admin Panel",
    "copyright": "© 2025 Mining Platform",

    "search_model": ["users.User", "miners.UserMiner", "plans.Plan"],

    "topmenu_links": [
        {"name": "Dashboard", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"app": "users"},
        {"app": "plans"},
        {"app": "miners"},
    ],

    "usermenu_links": [
        {"name": "API Docs", "url": "/swagger/", "new_window": True},
    ],

    "show_sidebar": True,
    "navigation_expanded": True,
    "order_with_respect_to": [
        "about_us",
        "reward",
        "stakes",
        "token_app",
        "users",
        "miners",
        "plans",
        "wallets",
    ],

    "icons": {
        "auth.Group": "fas fa-users-cog",
        "users.User": "fas fa-user",
        "users.EmailVerification": "fas fa-envelope",
        "miners.Miner": "fas fa-hammer",
        "miners.UserMiner": "fas fa-user-cog",
        "plans.Plan": "fas fa-layer-group",
        "wallets.WalletConnection": "fas fa-link",
        "wallets.WalletTransaction": "fas fa-random",
        "stakes.Stake": "fas fa-coins",
        "token_app.Token": "fas fa-key",
        "reward.Reward": "fas fa-gift",
        "reward.RewardCycle": "fas fa-sync-alt",
        "about_us.ContactInfo": "fas fa-info-circle",
    },

    "custom_links": {
        "users.User": [
            {
                "name": "Send Manual Email",
                "url": "https://yourdomain.com/send-email/",
                "icon": "fas fa-paper-plane",
                "permissions": ["users.change_user"]
            }
        ]
    },

    "default_icon_parents": "fas fa-folder-open",
    "default_icon_children": "fas fa-circle",

    "related_modal_active": True,

    # Dark, elegant theme
    "theme": "darkly",
    "custom_css": "admin/css/admin_custom.css",  # Optional custom styling
    "custom_js": None,
}


JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": True,
    "body_small_text": False,
    "brand_small_text": True,
    "brand_colour": "navbar-dark",
    "accent": "accent-info",
    "navbar": "navbar-dark",
    "no_navbar_border": True,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-info",
    "sidebar_nav_small_text": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_flat_style": True,
    "sidebar_nav_legacy_style": False,

    "theme": "darkly",
    "dark_mode_theme": "darkly",

    "button_classes": {
        "primary": "btn-outline-info",
        "secondary": "btn-outline-secondary",
        "info": "btn-outline-light",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success"
    },

    "actions_sticky_top": True,
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

AUTH_USER_MODEL = 'users.User'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT ='/home/coinbxhb/public_html/static'

MEDIA_URL = '/media/'
MEDIA_ROOT ='/home/coinbxhb/public_html/media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# CELERY_BROKER_URL = "redis://localhost:6379/0"
# CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
# CELERY_TIMEZONE = "UTC"
# CELERY_BEAT_SCHEDULE = {
#     "process_reward_cycles_every_30_minutes": {
#         "task": "reward.tasks.process_reward_cycles",
#         "schedule": 1800.0,  # هر 30 دقیقه یکبار اجرا شود
#     },
# }


from dotenv import load_dotenv

TON_API_KEY = os.getenv("TON_API_KEY", "default_token_here")

load_dotenv()

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
       'common.authentication.SafeJWTAuthentication'

    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
}


SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
            'description': "JWT Authorization header using the Bearer scheme. Example: 'Bearer <token>'",
        }
    },
    'USE_SESSION_AUTH': False,  # غیر فعال کردن session auth چون JWT استفاده میکنی
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60000),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,  # مطمئن شوید از SECRET_KEY پروژه استفاده می‌کند
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
}




import os
from dotenv import load_dotenv

load_dotenv()

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = int(os.getenv("EMAIL_PORT"))
EMAIL_USE_TLS = os.getenv("EMAIL_USE_TLS") == "True"
EMAIL_USE_SSL = os.getenv("EMAIL_USE_SSL") == "True"
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")


METAMASK_RPC_URL = "https://bsc-dataseed.binance.org/"
METAMASK_RECEIVER_ADDRESS = os.getenv("METAMASK_RECEIVER_ADDRESS")  # آدرس ولت شما برای دریافت

# RZ_REWARD_SENDER_PRIVATE_KEY=0xabc123...
# RZ_REWARD_SENDER_ADDRESS=0x123abc...
#
# MGC_REWARD_SENDER_PRIVATE_KEY=0xdef456...
# MGC_REWARD_SENDER_ADDRESS=0x456def...



BSC_RPC_URL = os.getenv("BSC_RPC_URL", "https://bsc-dataseed.binance.org/")
BSC_CHAIN_ID = int(os.getenv("BSC_CHAIN_ID", 56))

SERVER_WALLET_ADDRESS = os.getenv("SERVER_WALLET_ADDRESS")
SERVER_WALLET_PRIVATE_KEY = os.getenv("SERVER_WALLET_PRIVATE_KEY")

REWARD_BATCH_LIMIT = int(os.getenv("REWARD_BATCH_LIMIT", 50))
ADVISORY_LOCK_KEY = int(os.getenv("ADVISORY_LOCK_KEY", 4242424242))
REWARD_MAX_ATTEMPTS = int(os.getenv("REWARD_MAX_ATTEMPTS", 3))
REWARD_WAIT_RECEIPT_TIMEOUT = int(os.getenv("REWARD_WAIT_RECEIPT_TIMEOUT", 180))



from decimal import Decimal

MIN_WITHDRAWALS = {
    "MGC": Decimal("0"),  # حداقل برداشت 100 توکن MGC
    "RZ": Decimal("0"),    # حداقل برداشت 40 توکن RZ
}
